# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from multiwii/Waypoint.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class Waypoint(genpy.Message):
  _md5sum = "cadd3e271d812dac2f4b57212407a0e8"
  _type = "multiwii/Waypoint"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """uint8 wp_no
uint8 action
uint32 lat
uint32 lon
uint32 alt
uint16 p1
uint16 p2
uint16 p3
uint8 nav_flag"""
  __slots__ = ['wp_no','action','lat','lon','alt','p1','p2','p3','nav_flag']
  _slot_types = ['uint8','uint8','uint32','uint32','uint32','uint16','uint16','uint16','uint8']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       wp_no,action,lat,lon,alt,p1,p2,p3,nav_flag

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(Waypoint, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.wp_no is None:
        self.wp_no = 0
      if self.action is None:
        self.action = 0
      if self.lat is None:
        self.lat = 0
      if self.lon is None:
        self.lon = 0
      if self.alt is None:
        self.alt = 0
      if self.p1 is None:
        self.p1 = 0
      if self.p2 is None:
        self.p2 = 0
      if self.p3 is None:
        self.p3 = 0
      if self.nav_flag is None:
        self.nav_flag = 0
    else:
      self.wp_no = 0
      self.action = 0
      self.lat = 0
      self.lon = 0
      self.alt = 0
      self.p1 = 0
      self.p2 = 0
      self.p3 = 0
      self.nav_flag = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_2B3I3HB().pack(_x.wp_no, _x.action, _x.lat, _x.lon, _x.alt, _x.p1, _x.p2, _x.p3, _x.nav_flag))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 21
      (_x.wp_no, _x.action, _x.lat, _x.lon, _x.alt, _x.p1, _x.p2, _x.p3, _x.nav_flag,) = _get_struct_2B3I3HB().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_2B3I3HB().pack(_x.wp_no, _x.action, _x.lat, _x.lon, _x.alt, _x.p1, _x.p2, _x.p3, _x.nav_flag))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 21
      (_x.wp_no, _x.action, _x.lat, _x.lon, _x.alt, _x.p1, _x.p2, _x.p3, _x.nav_flag,) = _get_struct_2B3I3HB().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_2B3I3HB = None
def _get_struct_2B3I3HB():
    global _struct_2B3I3HB
    if _struct_2B3I3HB is None:
        _struct_2B3I3HB = struct.Struct("<2B3I3HB")
    return _struct_2B3I3HB
